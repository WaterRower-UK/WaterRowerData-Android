buildscript {
    ext.kotlinVersion = "1.5.21"

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:7.0.4")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath("de.mannodermaus.gradle.plugins:android-junit5:1.8.0.0")
        classpath("com.adarshr:gradle-test-logger-plugin:3.1.0")

        classpath("org.jetbrains.dokka:dokka-gradle-plugin:1.6.0")
        classpath("org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.18")
    }
}

plugins {
    id("com.github.ben-manes.versions") version "0.39.0"
    id("io.spring.dependency-management") version "1.0.11.RELEASE"
}

apply from: "$rootDir/dependencies.gradle"

allprojects {
    apply from: "$rootDir/.ops/git.gradle"
}

subprojects {
    repositories {
        google()
        mavenCentral()
    }

    project.apply from: "$rootDir/dependencies.gradle"

    afterEvaluate { project ->
        if (plugins.hasPlugin("com.android.library") || plugins.hasPlugin("com.android.application")) {
            android {
                compileSdkVersion(30)
                defaultConfig {
                    minSdkVersion(23)
                    targetSdkVersion(30)
                }

                testOptions {
                    unitTests.returnDefaultValues = true
                }

                lintOptions {
                    warningsAsErrors = true
                    textReport = true

                    ignoreTestSources true

                    ignore "ObsoleteLintCustomCheck", "GradleDependency"
                }

                compileOptions {
                    sourceCompatibility 1.8
                    targetCompatibility 1.8
                }

                kotlinOptions {
                    jvmTarget = "1.8"
                }
            }
        }

        if (project.hasProperty("publishing")) {
            project.apply from: "$rootDir/.ops/publishing.gradle"
        }
    }
}

task clean(type: Delete) {
    delete(rootProject.buildDir)
}

println("Version ${git.versionName()}")
